package com.tsinghua.esco.xtgl.bmgl.controller;


import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;


import com.tsinghua.esco.xtgl.bmgl.dao.IDempDao;
import com.tsinghua.esco.base.vo.DeptTree;
import com.tsinghua.esco.base.vo.VAccsInfo;
import com.tsinghua.esco.base.vo.VDeptInfo;



@Controller
@RequestMapping("/dept")
public class DeptController {
	
	@Autowired
	private IDempDao deptdao;
	
	@RequestMapping("/alldept")
	@ResponseBody
	public Object queryAllDept(VDeptInfo dept){
		List list=deptdao.queryAllDept(dept);
		dept.setPage(null);
		List list2=deptdao.queryAllDept(dept);
		
		Map map=new HashMap();
		map.put("total", list2.size());
		map.put("rows", list);
		return map;
	}
	
	@RequestMapping("/selectDept")
	@ResponseBody
	public Object selectDept(Integer did){
		
		VDeptInfo dept=deptdao.selecDept(did);
		return dept;
	}
	
	@RequestMapping("/qalldept")
	@ResponseBody
	public Object queryDept(){
		List list=deptdao.queryDept(0);
		loadDeptTree(list);
		return list;
	}
	
	
	private void loadDeptTree(List<DeptTree> list) {
		for(DeptTree dt:list){
			//得到 子节点
			List children= deptdao.queryDept(Integer.parseInt(dt.getId()));
			if(children!=null){
				if(children.size()>0){
					dt.setState("closed");
					dt.setChildren(children);
					//递归加载整棵树形节点
					loadDeptTree(children);
				}
			}
		}		
	}

	@RequestMapping("/queryAllBase1")
	@ResponseBody
	public Object queryAllBase1(){
	
		List list=deptdao.queryAllBase(11);
		return list;
	}
	
	@RequestMapping("/queryAllBase2")
	@ResponseBody
	public Object queryAllBase2(){
		List list=deptdao.queryAllBase(3);
		
		return list;
	}
	
	
	@RequestMapping("/adddept")
	@ResponseBody
	public String addDept(VDeptInfo dept){
		deptdao.addDept(dept);
		return "";
	}
	
	@RequestMapping("/deleteDept")
	@ResponseBody
	public Object deleteDept(Integer did,HttpServletResponse res){
		try {
			res.setCharacterEncoding("utf-8");
			String str="";
		   VAccsInfo accs=deptdao.findAccs(did);
			System.out.println("---num"+accs.getNum());
			if(accs.getNum()==0){
				str="可以删除";
				deptdao.deleteDept(did);
			}else{
				str="该部门下有用户，不能删除";
				}
			PrintWriter out=res.getWriter();
			out.println(str);
			out.flush();
			out.close();
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return "";
		
	}
	
	@RequestMapping("/toupdate")
	@ResponseBody
	public Object toupdate(Integer did){
		VDeptInfo dept= deptdao.toupdate(did);
		return dept;
		
	}
	
	@RequestMapping("/updatedept")
	@ResponseBody
	public String updateDept(VDeptInfo dept){
		deptdao.updateDept(dept);
		return "";
		
	}
	

	public IDempDao getDeptdao() {
		return deptdao;
	}

	public void setDeptdao(IDempDao deptdao) {
		this.deptdao = deptdao;
	}
	
	
	

}

